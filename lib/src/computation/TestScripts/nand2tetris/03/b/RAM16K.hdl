// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Which sub register are we loading?
    DMux4Way(in=load, sel=address[0..1], a=la, b=lb, c=lc, d=ld);

    // Each sub register is fed input and the demuxed load indicator, and the sub address
    RAM4K(in=in, out=ra, address=address[2..13], load=la);
    RAM4K(in=in, out=rb, address=address[2..13], load=lb);
    RAM4K(in=in, out=rc, address=address[2..13], load=lc);
    RAM4K(in=in, out=rd, address=address[2..13], load=ld);

    // Select which sub register we are outputting
    Mux4Way16(a=ra, b=rb, c=rc, d=rd, sel=address[0..1], out=out);
}