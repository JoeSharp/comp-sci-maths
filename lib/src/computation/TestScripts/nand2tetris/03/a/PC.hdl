// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Increment the last value, select the incremented one if possible
    Inc16(in=lastPC, out=lastPCplusOne);
    Mux16(a=lastPC, b=lastPCplusOne, sel=inc, out=io);

    // Loading input takes precendence over incremented value
    Mux16(a=io, b=in, sel=load, out=lo);

    // Reset has highest priority
    Mux16(a=lo, b[0..15]=false, sel=reset, out=ro);

    // Create that time spacing
    Register(in=ro, out=lastPC, out=out, load=true);
}
