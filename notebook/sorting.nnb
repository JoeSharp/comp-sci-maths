{
    "cells": [
        {
            "language": "typescript",
            "source": [
                "function bubbleSort<T>(input: T[]) {\n    for (let top=input.length - 1; top > 0; top--) {\n        for (let current=0; current < top; current++) {\n            if (input[current] > input[current + 1]) {\n                const swap = input[current];\n                input[current] = input[current + 1];\n                input[current + 1] = swap;\n            }\n        }\n    }\n}"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Run the algorithm with some simple numbers"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const testNumbers = Array(100).fill(null).map(() => Math.floor(Math.random() * 100));\n\nconsole.log(testNumbers);\n\nbubbleSort(testNumbers);\n\n\nconsole.log(testNumbers);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  54, 97, 90, 84, 79, 79, 47, 13,  3, 96, 28, 55,",
                                "  10, 83, 82, 61, 25, 81, 42, 98, 97, 39, 52, 49,",
                                "  86,  8, 50, 35, 69, 39, 27, 90, 93, 59, 43, 86,",
                                "  78, 38, 45, 88, 52, 17, 96, 84, 48, 33, 55, 86,",
                                "  20, 76, 12, 92, 35, 38, 92, 91, 80, 43, 31, 55,",
                                "  72, 33, 22, 25, 14, 36, 57, 80, 12, 67, 40, 90,",
                                "  68, 90, 76, 64,  4, 55, 65,  4, 31, 73, 60,  8,",
                                "  79, 73, 91, 19, 42, 52, 48, 66, 77,  7, 63, 77,",
                                "  77,  2, 51,  9",
                                "]",
                                "[",
                                "   2,  3,  4,  4,  7,  8,  8,  9, 10, 12, 12, 13,",
                                "  14, 17, 19, 20, 22, 25, 25, 27, 28, 31, 31, 33,",
                                "  33, 35, 35, 36, 38, 38, 39, 39, 40, 42, 42, 43,",
                                "  43, 45, 47, 48, 48, 49, 50, 51, 52, 52, 52, 54,",
                                "  55, 55, 55, 55, 57, 59, 60, 61, 63, 64, 65, 66,",
                                "  67, 68, 69, 72, 73, 73, 76, 76, 77, 77, 77, 78,",
                                "  79, 79, 79, 80, 80, 81, 82, 83, 84, 84, 86, 86,",
                                "  86, 88, 90, 90, 90, 90, 91, 91, 92, 92, 93, 96,",
                                "  96, 97, 97, 98",
                                "]",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}